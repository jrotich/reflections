How did viewing a diff between two versions of a file help you see the bug that was introduced?

Using diff, I could easily find out the exact line number and the actual difference between the two files.
This allows me to save a lot of time by not having to look at the two files line by line in order to find the error.



How could having easy access to the entire history of a file make you a more efficient programmer in the long term?

You could easily revert changes to go back to working versions instead of spending time figuring out what made an application work before.



What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?

Some important changes might be forgotten and lost before the manual commit.



Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?

Git works with the assumption that files are probably related while for google docs, the assumption is probably that the files are unrelated.


How can you use the commands git log and git diff to view the history of files?

You use git log to view the id and description of the relevant commit and then use git diff to look at the exact difference between commits



How might using version control make you more confident to make changes that could break something?

Users can quickly and easily revert the changes



Now that you have your workspace set up, what do you want to try using Git for?

Personal projects
